const _ = require("lodash")
const injectable = require("injectable")
const rxNode = require("rx-node")

module.exports = injectable({
  route: "apisById[{keys:ids}][{keys:props}]",
  get: function (paths, apiRepository) {
    // TODO: stream this
    const api$ = rxNode.fromStream(apiRepository.find()
      .filter({id: {$in: paths.ids}})
      .project(_(["id", ...paths.props]).map(prop => [prop, true]).fromPairs().value())
      // .map()
      .stream())
    // return _.flatten(pathsByApi)
    return api$.flatMap(api => console.log(api) || _.map(paths.props, prop => ({
      path: ["apisById", api.id, prop],
      value: api[prop],
    })))


    return mongoStream(apiRepository.find()
      .filter({id: {$in: paths.ids}})
      .project(usingArray(["id", ...paths.props])))
      .flatMap(api => _.map(paths.props, prop => ({
        path: ["apisById", api.id, prop],
        value: api[prop],
      })))
  },
})
